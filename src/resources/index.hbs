---
layout: default.hbs
---

      <div id="contentContainer">
      </div>

        <template id="listing-page">
          <section class="nsw-section nsw-section--off-white nsw-p-top-lg nsw-p-bottom-lg">
            <div class="nsw-container">
              <h2>Resources</h2>
              <div class="nsw-layout">
                <div class="nsw-layout__main">
                  <p class="nsw-intro">A library of useful things for digital teams and professionals in NSW Government, tagged by topic, role, and category.</p>
                </div>
                <div class="nsw-layout__sidebar nsw-layout__sidebar--desktop"></div>
              </div>
            </div>
          </section>
          <div class="nsw-container">
            <div class="nsw-layout">
              <div class="nsw-layout__sidebar">
                <form class="nsw-filters nsw-filters--fixed js-filters">
                  <div class="nsw-filters__controls active">
                    <button>
                      <span class="material-icons nsw-material-icons" focusable="false" aria-hidden="true">tune</span>
                      <span>Filter results</span>
                    </button>
                  </div>
                  <div class="nsw-filters__wrapper">
                    <div class="nsw-filters__back">
                      <button class="nsw-icon-button nsw-icon-button--flex js-close-sub-nav" type="button" aria-expanded="true" aria-controls="sub-nav-">
                        <span class="material-icons nsw-material-icons" focusable="false" aria-hidden="true">keyboard_arrow_left</span>
                        <span id="mobile-show">Show results</span>
                      </button>
                    </div>
                    <div class="nsw-filters__title">Filter results</div>
                    <div class="nsw-filters__list">
                      <div class="nsw-filters__item">
                        <label class="nsw-form__label" for="filters-all-keyword">Search</label>
                        <input class="nsw-form__input" type="text" id="filters-all-keyword" name="filters-keyword" value="">
                      </div>
                    </div>
                  </div>
                </form>
              </div>
              <main class="nsw-layout__main">
                <div class="nsw-results-bar">
                  <div class="nsw-results-bar__info"></div>
                </div>
                <div class="nsw-search-results">
                  <div id="guides"></div>
                </div>
              </main>
            </div>
          </div>
        </template>
        <template id="content-page">
          <section class="nsw-section nsw-section--off-white nsw-p-top-lg nsw-p-bottom-lg">
            <div class="nsw-container">
              <div class="nsw-layout">
                <div class="nsw-layout__main" id="article-content">

                </div>
                <div class="nsw-layout__sidebar nsw-layout__sidebar--desktop">
                  {{>wiki-message}}
                </div>
              </div>
            </div>
          </section>
        </template>

      <script>

      const pagePath = "/resources/";
      const router = new Navigo('/', { hash: true });

      window.addEventListener("load", () => {
        router.on("/:id/:name", (match) => {
          console.log(match);
          unload();
          articlePage(match.data.id);
          window.NSW.initSite()
        })

        .on('/', (match) => {
          console.log(match);
          unload();
          listingPage();
          window.NSW.initSite()
        })

        .on(pagePath, (match) => {
          console.log(match);
          unload();
          router.navigate('/');
        })

        .resolve();
      });

      function listingPage() {
        var dataset;

        function process(value) {
          return value == undefined ? '' : value.replace(/[^a-z0-9_]+/gi, '-').replace(/^-|-$/g, '').toLowerCase();
        }

        var template = document.querySelector('#listing-page');
        var clone = template.content.cloneNode(true);
        document.getElementById("contentContainer").appendChild(clone);

        const keywords = document.getElementById("filters-all-keyword");

        if(keywords.value.length==0){
            var searchParams = new URLSearchParams(window.location.search);
            query = searchParams.get('q');
            keywords.value = query;
        }

        function rePopulate(){
          document.getElementById("guides").replaceChildren();
          populate();
        }

        function populate(searchStr){
          var theCount = 0;

          for (const [key, value] of Object.entries(dataset)) {
            let increment = false;
            let URL

            if(value.URL){
              URL = value.URL
              titleLink = `<a href="${URL}" target="_blank">${value.title}</a>`;
            } else {
              name = process(value.title);
              URL = `${pagePath}#/${value.id}/${name}`;
              titleLink = `<a href="${URL}" data-internal="${URL}">${value.title}</a>`;
            }

            const listItem = document.createElement("div");
            listItem.classList = "nsw-list-item";

            const listItemInner = document.createElement("div");
            listItemInner.classList = "nsw-list-item__content";

            const title = document.createElement("div");
            title.classList = "nsw-list-item__title";
            title.innerHTML = titleLink
            listItemInner.appendChild(title);

            const synopsis = document.createElement("div");
            synopsis.classList = "nsw-list-item__copy";
            synopsis.innerHTML = value.synopsis
            listItemInner.appendChild(synopsis);

            const tags = document.createElement("div");
            tags.classList = "nsw-list-item__tags nsw-list nsw-list--8";
            listItemInner.appendChild(tags);

            value.tags.forEach(tagData => {
              var thisTag = document.createElement("div");
              thisTag.classList = "nsw-tag";
              thisTag.innerHTML = tagData.name
              tags.appendChild(thisTag);

              if(document.getElementById(`checkbox-${tagData.id}`).checked){
                if(keywords.value.length=0 || listItemInner.textContent.toLowerCase().includes(keywords.value.toLowerCase())){
                  document.getElementById("guides").appendChild(listItem);
                  increment = true;
                }

              }

            });

            if (increment){theCount++}

            listItem.appendChild(listItemInner);
            document.querySelector(".nsw-results-bar__info").innerHTML = `${theCount} results`;
            document.getElementById('mobile-show').innerHTML = `Show ${theCount} results`;

          }
        }


        fetch('https://nsw-design-system-guides.herokuapp.com/tag-types').then(function (response) {
          return response.json();
        }).then(function (data) {
          let tagPropPromise = new Promise(function(resolve, reject) {
            for (const [key, tagTypes] of Object.entries(data)) {
              if(tagTypes.tags.length){
                const tagGroup = document.createElement("div");
                tagGroup.classList = "nsw-filters__item";
                tagGroup.innerHTML = `<p class="nsw-form__label nsw-m-bottom-sm">${tagTypes.name}</p>`;
                const tagCheckGroup = document.createElement("div");
                tagCheckGroup.classList = "nsw-list nsw-list--8";
                tagGroup.append(tagCheckGroup);

                for (const [key, tags] of Object.entries(tagTypes.tags)) {
                  if(tags.guides.length){
                    const checkbox = document.createElement("div");
                    checkbox.classList = "nsw-tag nsw-tag--checkbox";
                    checkbox.innerHTML = `
                      <input type="checkbox" id="checkbox-${tags.id}" name="${tags.name}" value="tag-${tags.id}" checked>
                      <label for="checkbox-${tags.id}">${tags.name}</label>
                    `;
                    tagCheckGroup.append(checkbox);
                    document.querySelector(".nsw-filters__list").append(tagGroup);
                  }
                }


              }

            }
            resolve(); // when successful
            reject();  // when error
          });

          tagPropPromise.then(
            function(value) {
              fetch('https://nsw-design-system-guides.herokuapp.com/guides').then(function (response) {
                return response.json();
              }).then(function (data) {
                dataset = data;

                populate();

              }).catch(function (err) {
                // There was an error
                console.warn('Something went wrong getting guides.', err);
              });
            },
            function(error) { /* code if some error */ }
          )
        }).catch(function (err) {
          // There was an error
          console.warn('Something went wrong adding checkboxes.', err);
        });

        document.querySelector(".nsw-filters__list").addEventListener('click', function(e) {
        	if(e.target.nodeName == 'INPUT') {
            rePopulate()
        	}
        });

        document.querySelector("#guides").addEventListener('click', function(e) {
        	if(e.target.dataset.internal) {
            navigate(e.target.dataset.internal);
            return false;
        	}
        });

        keywords.addEventListener('keyup', function(e) {
          rePopulate();
        });
      };

      function articlePage(id){
          fetch('https://nsw-design-system-guides.herokuapp.com/guides/' + id).then(function (response) {
            return response.json();
          }).then(function (data) {

            var template = document.querySelector('#content-page');
            var clone = template.content.cloneNode(true);
            document.getElementById("contentContainer").appendChild(clone);

            document.getElementById('article-content').innerHTML = data.content

          }).catch(function (err) {
            // There was an error
            console.warn('Something went wrong getting guides.', err);
          });
      };

      function unload(){
        document.getElementById('contentContainer').innerHTML="";
      };

      function navigate(url){
        unload();
        router.navigate(url);
      }
      </script>
